{"ast":null,"code":"import _toConsumableArray from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from \"eosjs\";\nexport var Scatter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {string} node_url EOS-node url \n   * @param {*} port EOS-node port number\n   * @param {*} chain EOS-chain name. Please choose one from [\"mainnet\", \"kylin\", \"jungle\"].\n   */\n  function Scatter() {\n    var node_url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://nodes.get-scatter.com\";\n    var port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"443\";\n    var chain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"mainnet\";\n\n    _classCallCheck(this, Scatter);\n\n    var chainID = {\n      \"mainnet\": \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\",\n      \"kylin\": \"5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191\",\n      \"jungle\": \"038f4b0fc8ff18a4f0842a8f0564611f6e96e8535901dd45e43ac8691a1c4dca\"\n    };\n    var re = new RegExp(\"(http(s)?://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ./?%&=]*)?\", \"gi\");\n\n    if (node_url.match(re)) {\n      var _node_url$split = node_url.split(\"://\"),\n          _node_url$split2 = _slicedToArray(_node_url$split, 2),\n          protocol = _node_url$split2[0],\n          host = _node_url$split2[1];\n\n      this.network = {\n        blockchain: \"eos\",\n        protocol: protocol,\n        host: host,\n        port: port,\n        chainId: chainID[chain]\n      };\n      this.eosOptions = {\n        expireInSeconds: 60\n      };\n      this.requiredFields = {\n        accounts: [this.network]\n      }; // ScatterJS setup\n\n      ScatterJS.plugins(new ScatterEOS());\n      this.scatter = ScatterJS.scatter;\n      this.eosJS = this.scatter.eos(this.network, Eos, this.eosOptions); // eosjs@16.0.9 instance\n\n      this.connected = false; // Scatter exists and is unlocked.\n    } else {\n      throw new Error(\"this network is invalid. Please try again.\");\n    }\n  }\n  /**\n   * connect this instance to Scatter-client.\n   * this method is scatter unique and needs to be executed.\n   * @param {string} appName the name of the application. It can be set freely.\n   */\n\n\n  _createClass(Scatter, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(appName) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ScatterJS.scatter.connect(appName);\n\n              case 2:\n                this.connected = _context.sent;\n\n                if (this.connected) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", setTimeout(this.connect(appName), 2000));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function connect(_x) {\n        return _connect.apply(this, arguments);\n      };\n    }()\n    /**\n     * set Account to this instance\n     * To make a action, you need to execute this method to store the appropriate account in the account property.\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.scatter || !this.scatter.identity)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.scatter.login(this.requiredFields);\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                throw new Error(_context2.t0);\n\n              case 9:\n                if (this.account) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                _context2.prev = 10;\n                this.account = this.scatter.identity.accounts.find(function (x) {\n                  return x.blockchain === 'eos';\n                });\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t1 = _context2[\"catch\"](10);\n                throw new Error(\"Account is not found. Please try again.\");\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 6], [10, 14]]);\n      }));\n\n      return function login() {\n        return _login.apply(this, arguments);\n      };\n    }()\n    /**\n     * logout from app \n     */\n\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                res = this.scatter.logout();\n                return _context3.abrupt(\"return\", res);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function logout() {\n        return _logout.apply(this, arguments);\n      };\n    }()\n    /**\n     * set requireFields\n     * this method is scatter unique\n     * @param {string} key requireFields key name\n     * @param {any} content requireFields value\n     */\n\n  }, {\n    key: \"setRequiredFields\",\n    value: function setRequiredFields(key, content) {\n      this.requiredFields = Object.assign({}, this.requiredFields, _defineProperty({}, key, content));\n    }\n    /**\n     * set transaction option \n     * @param {string} key option key name\n     * @param {any} content option value\n     */\n\n  }, {\n    key: \"setTxOptions\",\n    value: function setTxOptions(key, content) {\n      this.eosOptions = Object.assign({}, this.eosOptions, _defineProperty({}, key, content));\n    }\n    /**\n     * send a action\n     * @param  {Object} action\n     *     action = {\n     *         contractName : \"CONTRACT_NAME\",\n     *         actionName: \"ACTION_NAME\",\n     *         params: [params]\n     *     }\n     */\n\n  }, {\n    key: \"action\",\n    value: function () {\n      var _action = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref) {\n        var contractName, actionName, params, txOptions, contract, res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                contractName = _ref.contractName, actionName = _ref.actionName, params = _ref.params;\n                _context4.prev = 1;\n                txOptions = {\n                  authorization: [\"\".concat(this.account.name, \"@\").concat(this.account.authority)]\n                };\n                _context4.next = 5;\n                return this.eosJS.contract(contractName, {\n                  \"requiredFields\": this.requiredFields\n                });\n\n              case 5:\n                contract = _context4.sent;\n                _context4.next = 8;\n                return contract[actionName].apply(contract, _toConsumableArray(params).concat([txOptions]));\n\n              case 8:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res);\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n\n                if (!(typeof _context4.t0 == \"object\")) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                this._scatterError(_context4.t0);\n\n                _context4.next = 19;\n                break;\n\n              case 18:\n                throw new Error(_context4.t0);\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 12]]);\n      }));\n\n      return function action(_x2) {\n        return _action.apply(this, arguments);\n      };\n    }()\n    /**\n     * send a transaction\n     * @param  {Object} action\n     *     action = {\n     *         contractName : \"CONTRACT_NAME\",\n     *         actionName: \"ACTION_NAME\",\n     *         params: [params]\n     *     }\n     */\n\n  }, {\n    key: \"transaction\",\n    value: function () {\n      var _transaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _len,\n            actionList,\n            _key,\n            txOptions,\n            contractList,\n            res,\n            _args5 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                for (_len = _args5.length, actionList = new Array(_len), _key = 0; _key < _len; _key++) {\n                  actionList[_key] = _args5[_key];\n                }\n\n                _context5.prev = 1;\n                txOptions = {\n                  authorization: [\"\".concat(this.account.name, \"@\").concat(this.account.authority)]\n                };\n                contractList = actionList.map(function (act) {\n                  return act.contractName;\n                });\n                _context5.next = 6;\n                return this.eosJS.transaction(contractList, function (tx) {\n                  actionList.forEach(function (act) {\n                    var _tx$contractName;\n\n                    var contractName = act.contractName.replace(\".\", \"_\"); // dots cannot be used in method name\n\n                    (_tx$contractName = tx[contractName])[act.actionName].apply(_tx$contractName, _toConsumableArray(act.params).concat([txOptions]));\n                  });\n                });\n\n              case 6:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res);\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (!(typeof _context5.t0 == \"object\")) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                this._scatterError(_context5.t0);\n\n                _context5.next = 17;\n                break;\n\n              case 16:\n                throw new Error(_context5.t0);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 10]]);\n      }));\n\n      return function transaction() {\n        return _transaction.apply(this, arguments);\n      };\n    }()\n    /**\n     * send EOS to recipient\n     * @param {string} recipient recipient account name\n     * @param {number} amount eos amount\n     * @param {string} memo text message\n     */\n\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(recipient, amount, memo) {\n        var eosAmount, actObj, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                eosAmount = Scatter.numToAsset(amount);\n                actObj = {\n                  contractName: \"eosio.token\",\n                  actionName: \"transfer\",\n                  params: [this.account.name, recipient, eosAmount, memo]\n                };\n                _context6.next = 5;\n                return this.action(actObj);\n\n              case 5:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res);\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                if (!(typeof _context6.t0 == \"object\")) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                this._scatterError(_context6.t0);\n\n                _context6.next = 16;\n                break;\n\n              case 15:\n                throw new Error(_context6.t0);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 9]]);\n      }));\n\n      return function send(_x3, _x4, _x5) {\n        return _send.apply(this, arguments);\n      };\n    }()\n    /**\n     * convert a number data to eos asset data \n     * If you enter 1 for this function, a value of \"1.0000 EOS\" is output.\n     * @param {number} amount token amount\n     * @param {number} decimal token decimal\n     * @param {string} symbol token symbol\n     */\n\n  }, {\n    key: \"_scatterError\",\n\n    /**\n     * process scatter error object\n     * @param {object} errorObj scatter error object\n     */\n    value: function _scatterError(errorObj) {\n      throw new Error(\"\".concat(errorObj.type, \"  \").concat(errorObj.message));\n    }\n  }], [{\n    key: \"numToAsset\",\n    value: function numToAsset(amount) {\n      var decimal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n      var symbol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"EOS\";\n      var re = new RegExp(\"^([1-9]\\\\d*|0)(\\\\.\\\\d+)?$\", \"gi\"); // check if the type is unsigned float.\n\n      if (String(amount).match(re)) {\n        var eos_amount = String(amount.toFixed(decimal)) + \" \".concat(symbol);\n        return eos_amount;\n      } else {\n        throw new Error(\"amount can only be an unsigned decimal.\");\n      }\n    }\n  }]);\n\n  return Scatter;\n}();\nvar scatter = new Scatter(process.env.REACT_APP_HOST_DOMAIN, 443, \"kylin\");\n\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee7() {\n  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return scatter.connect(\"Ryodan\");\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, this);\n}))();\n\nexport default scatter;","map":{"version":3,"sources":["/var/www/html/pcs-proxy/src/scripts/Scatter.js"],"names":["ScatterJS","ScatterEOS","Eos","Scatter","node_url","port","chain","chainID","re","RegExp","match","split","protocol","host","network","blockchain","chainId","eosOptions","expireInSeconds","requiredFields","accounts","plugins","scatter","eosJS","eos","connected","Error","appName","connect","setTimeout","identity","login","account","find","x","res","logout","key","content","Object","assign","contractName","actionName","params","txOptions","authorization","name","authority","contract","_scatterError","actionList","contractList","map","act","transaction","tx","forEach","replace","recipient","amount","memo","eosAmount","numToAsset","actObj","action","errorObj","type","message","decimal","symbol","String","eos_amount","toFixed","process","env","REACT_APP_HOST_DOMAIN"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,WAAaC,OAAb;AAAA;AAAA;AAEI;;;;;;AAMA,qBAAyF;AAAA,QAA7EC,QAA6E,uEAAlE,+BAAkE;AAAA,QAAjCC,IAAiC,uEAA1B,KAA0B;AAAA,QAAnBC,KAAmB,uEAAX,SAAW;;AAAA;;AACrF,QAAMC,OAAO,GAAG;AACZ,iBAAW,kEADC;AAEZ,eAAS,kEAFG;AAGZ,gBAAU;AAHE,KAAhB;AAKA,QAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAW,sDAAX,EAAmE,IAAnE,CAAX;;AACA,QAAIL,QAAQ,CAACM,KAAT,CAAeF,EAAf,CAAJ,EAAwB;AAAA,4BACKJ,QAAQ,CAACO,KAAT,CAAe,KAAf,CADL;AAAA;AAAA,UACbC,QADa;AAAA,UACHC,IADG;;AAEpB,WAAKC,OAAL,GAAe;AACXC,QAAAA,UAAU,EAAE,KADD;AAEXH,QAAAA,QAAQ,EAAEA,QAFC;AAGXC,QAAAA,IAAI,EAAEA,IAHK;AAIXR,QAAAA,IAAI,EAAEA,IAJK;AAKXW,QAAAA,OAAO,EAAET,OAAO,CAACD,KAAD;AALL,OAAf;AAQA,WAAKW,UAAL,GAAkB;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAlB;AACA,WAAKC,cAAL,GAAsB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,KAAKN,OAAN;AAAZ,OAAtB,CAXoB,CAapB;;AACAd,MAAAA,SAAS,CAACqB,OAAV,CAAkB,IAAIpB,UAAJ,EAAlB;AACA,WAAKqB,OAAL,GAAetB,SAAS,CAACsB,OAAzB;AACA,WAAKC,KAAL,GAAa,KAAKD,OAAL,CAAaE,GAAb,CAAiB,KAAKV,OAAtB,EAA+BZ,GAA/B,EAAoC,KAAKe,UAAzC,CAAb,CAhBoB,CAgB+C;;AACnE,WAAKQ,SAAL,GAAiB,KAAjB,CAjBoB,CAiBI;AAE3B,KAnBD,MAmBO;AACH,YAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACH;AACJ;AAED;;;;;;;AAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gDA4CkBC,OA5ClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA6C+B3B,SAAS,CAACsB,OAAV,CAAkBM,OAAlB,CAA0BD,OAA1B,CA7C/B;;AAAA;AA6CQ,qBAAKF,SA7Cb;;AAAA,oBA+Ca,KAAKA,SA/ClB;AAAA;AAAA;AAAA;;AAAA,iDAgDmBI,UAAU,CAAC,KAAKD,OAAL,CAAaD,OAAb,CAAD,EAAwB,IAAxB,CAhD7B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoDI;;;;;AApDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAyDY,CAAC,KAAKL,OAAN,IAAiB,CAAC,KAAKA,OAAL,CAAaQ,QAzD3C;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA4DsB,KAAKR,OAAL,CAAaS,KAAb,CAAmB,KAAKZ,cAAxB,CA5DtB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,sBA+DsB,IAAIO,KAAJ,cA/DtB;;AAAA;AAAA,oBAmEa,KAAKM,OAnElB;AAAA;AAAA;AAAA;;AAAA;AAsEgB,qBAAKA,OAAL,GAAe,KAAKV,OAAL,CAAaQ,QAAb,CAAsBV,QAAtB,CAA+Ba,IAA/B,CAAoC,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACnB,UAAF,KAAiB,KAArB;AAAA,iBAArC,CAAf;AAtEhB;AAAA;;AAAA;AAAA;AAAA;AAAA,sBAyEsB,IAAIW,KAAJ,CAAU,yCAAV,CAzEtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8EI;;;;AA9EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkFcS,gBAAAA,GAlFd,GAkFoB,KAAKb,OAAL,CAAac,MAAb,EAlFpB;AAAA,kDAmFeD,GAnFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsFI;;;;;;;AAtFJ;AAAA;AAAA,sCA4FsBE,GA5FtB,EA4F2BC,OA5F3B,EA4FoC;AAC5B,WAAKnB,cAAL,GAAsBoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKrB,cAAvB,sBACjBkB,GADiB,EACXC,OADW,EAAtB;AAGH;AAED;;;;;;AAlGJ;AAAA;AAAA,iCAuGiBD,GAvGjB,EAuGsBC,OAvGtB,EAuG+B;AACvB,WAAKrB,UAAL,GAAkBsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKvB,UAAvB,sBACboB,GADa,EACPC,OADO,EAAlB;AAGH;AAED;;;;;;;;;;AA7GJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsHmBG,gBAAAA,YAtHnB,QAsHmBA,YAtHnB,EAsHiCC,UAtHjC,QAsHiCA,UAtHjC,EAsH6CC,MAtH7C,QAsH6CA,MAtH7C;AAAA;AAwHkBC,gBAAAA,SAxHlB,GAwH8B;AAAEC,kBAAAA,aAAa,EAAE,WAAI,KAAKb,OAAL,CAAac,IAAjB,cAAyB,KAAKd,OAAL,CAAae,SAAtC;AAAjB,iBAxH9B;AAAA;AAAA,uBAyHmC,KAAKxB,KAAL,CAAWyB,QAAX,CAAoBP,YAApB,EAAkC;AAAE,oCAAkB,KAAKtB;AAAzB,iBAAlC,CAzHnC;;AAAA;AAyHkB6B,gBAAAA,QAzHlB;AAAA;AAAA,uBA0H8BA,QAAQ,CAACN,UAAD,CAAR,OAAAM,QAAQ,qBAAgBL,MAAhB,UAAwBC,SAAxB,GA1HtC;;AAAA;AA0HkBT,gBAAAA,GA1HlB;AAAA,kDA2HmBA,GA3HnB;;AAAA;AAAA;AAAA;;AAAA,sBA8HgB,uBAAiB,QA9HjC;AAAA;AAAA;AAAA;;AA+HgB,qBAAKc,aAAL;;AA/HhB;AAAA;;AAAA;AAAA,sBAiIsB,IAAIvB,KAAJ,cAjItB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsII;;;;;;;;;;AAtIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2CA+IyBwB,UA/IzB;AA+IyBA,kBAAAA,UA/IzB;AAAA;;AAAA;AAiJkBN,gBAAAA,SAjJlB,GAiJ8B;AAAEC,kBAAAA,aAAa,EAAE,WAAI,KAAKb,OAAL,CAAac,IAAjB,cAAyB,KAAKd,OAAL,CAAae,SAAtC;AAAjB,iBAjJ9B;AAkJkBI,gBAAAA,YAlJlB,GAkJiCD,UAAU,CAACE,GAAX,CAAe,UAACC,GAAD,EAAS;AAAE,yBAAOA,GAAG,CAACZ,YAAX;AAAyB,iBAAnD,CAlJjC;AAAA;AAAA,uBAmJ8B,KAAKlB,KAAL,CAAW+B,WAAX,CAAuBH,YAAvB,EAAqC,UAACI,EAAD,EAAQ;AAC3DL,kBAAAA,UAAU,CAACM,OAAX,CAAmB,UAACH,GAAD,EAAS;AAAA;;AACxB,wBAAMZ,YAAY,GAAGY,GAAG,CAACZ,YAAJ,CAAiBgB,OAAjB,CAAyB,GAAzB,EAA8B,GAA9B,CAArB,CADwB,CACiC;;AACzD,wCAAAF,EAAE,CAACd,YAAD,CAAF,EAAiBY,GAAG,CAACX,UAArB,6CAAoCW,GAAG,CAACV,MAAxC,UAAgDC,SAAhD;AACH,mBAHD;AAIH,iBALiB,CAnJ9B;;AAAA;AAmJkBT,gBAAAA,GAnJlB;AAAA,kDAyJmBA,GAzJnB;;AAAA;AAAA;AAAA;;AAAA,sBA4JgB,uBAAkB,QA5JlC;AAAA;AAAA;AAAA;;AA6JgB,qBAAKc,aAAL;;AA7JhB;AAAA;;AAAA;AAAA,sBA+JsB,IAAIvB,KAAJ,cA/JtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoKI;;;;;;;AApKJ;AAAA;AAAA;AAAA;AAAA;AAAA,iDA0KegC,SA1Kf,EA0K0BC,MA1K1B,EA0KkCC,IA1KlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4KkBC,gBAAAA,SA5KlB,GA4K8B1D,OAAO,CAAC2D,UAAR,CAAmBH,MAAnB,CA5K9B;AA6KkBI,gBAAAA,MA7KlB,GA6K2B;AACXtB,kBAAAA,YAAY,EAAG,aADJ;AAEXC,kBAAAA,UAAU,EAAE,UAFD;AAGXC,kBAAAA,MAAM,EAAE,CAAC,KAAKX,OAAL,CAAac,IAAd,EAAoBY,SAApB,EAA+BG,SAA/B,EAA0CD,IAA1C;AAHG,iBA7K3B;AAAA;AAAA,uBAkL8B,KAAKI,MAAL,CAAYD,MAAZ,CAlL9B;;AAAA;AAkLkB5B,gBAAAA,GAlLlB;AAAA,kDAmLmBA,GAnLnB;;AAAA;AAAA;AAAA;;AAAA,sBAsLgB,uBAAkB,QAtLlC;AAAA;AAAA;AAAA;;AAuLgB,qBAAKc,aAAL;;AAvLhB;AAAA;;AAAA;AAAA,sBAyLsB,IAAIvB,KAAJ,cAzLtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8LI;;;;;;;;AA9LJ;AAAA;;AAgNI;;;;AAhNJ,kCAoNkBuC,QApNlB,EAoN4B;AACpB,YAAM,IAAIvC,KAAJ,WAAauC,QAAQ,CAACC,IAAtB,eAA+BD,QAAQ,CAACE,OAAxC,EAAN;AACH;AAtNL;AAAA;AAAA,+BAqMsBR,MArMtB,EAqMuD;AAAA,UAAzBS,OAAyB,uEAAjB,CAAiB;AAAA,UAAdC,MAAc,uEAAP,KAAO;AAC/C,UAAM7D,EAAE,GAAG,IAAIC,MAAJ,CAAW,2BAAX,EAAwC,IAAxC,CAAX,CAD+C,CACW;;AAE1D,UAAI6D,MAAM,CAACX,MAAD,CAAN,CAAejD,KAAf,CAAqBF,EAArB,CAAJ,EAA8B;AAC1B,YAAM+D,UAAU,GAAGD,MAAM,CAACX,MAAM,CAACa,OAAP,CAAeJ,OAAf,CAAD,CAAN,cAAsCC,MAAtC,CAAnB;AACA,eAAOE,UAAP;AACH,OAHD,MAGO;AACH,cAAM,IAAI7C,KAAJ,CAAU,yCAAV,CAAN;AACH;AACJ;AA9ML;;AAAA;AAAA;AAyNA,IAAIJ,OAAO,GAAG,IAAInB,OAAJ,CAAYsE,OAAO,CAACC,GAAR,CAAYC,qBAAxB,EAA+C,GAA/C,EAAoD,OAApD,CAAd;;AAEA;AAAA;AAAA,yBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSrD,OAAO,CAACM,OAAR,CAAgB,QAAhB,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD;;AAIA,eAAeN,OAAf","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from \"eosjs\";\n\nexport class Scatter {\n\n    /**\n     * constructor\n     * @param {string} node_url EOS-node url \n     * @param {*} port EOS-node port number\n     * @param {*} chain EOS-chain name. Please choose one from [\"mainnet\", \"kylin\", \"jungle\"].\n     */\n    constructor(node_url = \"https://nodes.get-scatter.com\", port = \"443\", chain = \"mainnet\") {\n        const chainID = {\n            \"mainnet\": \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\",\n            \"kylin\": \"5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191\",\n            \"jungle\": \"038f4b0fc8ff18a4f0842a8f0564611f6e96e8535901dd45e43ac8691a1c4dca\"\n        }\n        const re = new RegExp(\"(http(s)?://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ./?%&=]*)?\", \"gi\");\n        if (node_url.match(re)) {\n            const [protocol, host] = node_url.split(\"://\");\n            this.network = {\n                blockchain: \"eos\",\n                protocol: protocol,\n                host: host,\n                port: port,\n                chainId: chainID[chain]\n            }\n\n            this.eosOptions = { expireInSeconds: 60 };\n            this.requiredFields = { accounts: [this.network] };\n\n            // ScatterJS setup\n            ScatterJS.plugins(new ScatterEOS());\n            this.scatter = ScatterJS.scatter;\n            this.eosJS = this.scatter.eos(this.network, Eos, this.eosOptions); // eosjs@16.0.9 instance\n            this.connected = false; // Scatter exists and is unlocked.\n\n        } else {\n            throw new Error(\"this network is invalid. Please try again.\");\n        }\n    }\n\n    /**\n     * connect this instance to Scatter-client.\n     * this method is scatter unique and needs to be executed.\n     * @param {string} appName the name of the application. It can be set freely.\n     */\n    async connect(appName) {\n        this.connected = await ScatterJS.scatter.connect(appName); // if Scatter is unlocked , this become true.\n\n        if (!this.connected) {\n            return setTimeout(this.connect(appName), 2000);\n        }\n    }\n\n    /**\n     * set Account to this instance\n     * To make a action, you need to execute this method to store the appropriate account in the account property.\n     */\n    async login() {\n        if (!this.scatter || !this.scatter.identity) {\n            // login\n            try {\n                await this.scatter.login(this.requiredFields);\n            }\n            catch (error) {\n                throw new Error(error);\n            }\n        }\n\n        if (!this.account) {\n            // When logged in but no account is set\n            try {\n                this.account = this.scatter.identity.accounts.find(x => x.blockchain === 'eos');\n            }\n            catch {\n                throw new Error(\"Account is not found. Please try again.\");\n            }\n        }\n    }\n\n    /**\n     * logout from app \n     */\n    async logout() {\n        const res = this.scatter.logout();\n        return res;\n    }\n\n    /**\n     * set requireFields\n     * this method is scatter unique\n     * @param {string} key requireFields key name\n     * @param {any} content requireFields value\n     */\n    setRequiredFields(key, content) {\n        this.requiredFields = Object.assign({}, this.requiredFields, {\n            [key]: content\n        });\n    }\n\n    /**\n     * set transaction option \n     * @param {string} key option key name\n     * @param {any} content option value\n     */\n    setTxOptions(key, content) {\n        this.eosOptions = Object.assign({}, this.eosOptions, {\n            [key]: content\n        });\n    }\n\n    /**\n     * send a action\n     * @param  {Object} action\n     *     action = {\n     *         contractName : \"CONTRACT_NAME\",\n     *         actionName: \"ACTION_NAME\",\n     *         params: [params]\n     *     }\n     */\n    async action({ contractName, actionName, params }) {\n        try {\n            const txOptions = { authorization: [`${this.account.name}@${this.account.authority}`] };\n            const contract = await this.eosJS.contract(contractName, { \"requiredFields\": this.requiredFields });\n            const res = await contract[actionName](...params, txOptions);\n            return res;\n        }\n        catch (error) {\n            if (typeof(error) == \"object\") {\n                this._scatterError(error);\n            } else {\n                throw new Error(error);\n            }\n        }\n    }\n\n    /**\n     * send a transaction\n     * @param  {Object} action\n     *     action = {\n     *         contractName : \"CONTRACT_NAME\",\n     *         actionName: \"ACTION_NAME\",\n     *         params: [params]\n     *     }\n     */\n    async transaction(...actionList) {\n        try {\n            const txOptions = { authorization: [`${this.account.name}@${this.account.authority}`] };\n            const contractList = actionList.map((act) => { return act.contractName });\n            const res = await this.eosJS.transaction(contractList, (tx) => {\n                actionList.forEach((act) => {\n                    const contractName = act.contractName.replace(\".\", \"_\"); // dots cannot be used in method name\n                    tx[contractName][act.actionName](...act.params, txOptions);\n                })\n            });\n            return res;\n        }\n        catch (error) {\n            if (typeof (error) == \"object\") {\n                this._scatterError(error);\n            } else {\n                throw new Error(error);\n            }\n        }\n    }\n\n    /**\n     * send EOS to recipient\n     * @param {string} recipient recipient account name\n     * @param {number} amount eos amount\n     * @param {string} memo text message\n     */\n    async send(recipient, amount, memo) {\n        try {\n            const eosAmount = Scatter.numToAsset(amount);\n            const actObj = {\n                contractName : \"eosio.token\",\n                actionName: \"transfer\",\n                params: [this.account.name, recipient, eosAmount, memo]\n            }\n            const res = await this.action(actObj);\n            return res\n        }\n        catch (error) {\n            if (typeof (error) == \"object\") {\n                this._scatterError(error);\n            } else {\n                throw new Error(error);\n            }\n        }\n    }\n\n    /**\n     * convert a number data to eos asset data \n     * If you enter 1 for this function, a value of \"1.0000 EOS\" is output.\n     * @param {number} amount token amount\n     * @param {number} decimal token decimal\n     * @param {string} symbol token symbol\n     */\n    static numToAsset(amount, decimal=4 ,symbol=\"EOS\") {\n        const re = new RegExp(\"^([1-9]\\\\d*|0)(\\\\.\\\\d+)?$\", \"gi\"); // check if the type is unsigned float.\n\n        if (String(amount).match(re)) {\n            const eos_amount = String(amount.toFixed(decimal)) + ` ${symbol}`;\n            return eos_amount\n        } else {\n            throw new Error(\"amount can only be an unsigned decimal.\")\n        }\n    }\n\n    /**\n     * process scatter error object\n     * @param {object} errorObj scatter error object\n     */\n    _scatterError(errorObj) {\n        throw new Error(`${errorObj.type}  ${errorObj.message}`);\n    }\n}\n\nlet scatter = new Scatter(process.env.REACT_APP_HOST_DOMAIN, 443, \"kylin\");\n\n(async () => {\n    await scatter.connect(\"Ryodan\");\n})()\n\nexport default scatter;"]},"metadata":{},"sourceType":"module"}