{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/pcs-proxy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/pcs-proxy/src/Component/Setting/Password.jsx\";\nimport React, { Component } from \"react\";\nimport { Collapse, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport SubSig from \"../../scripts/EosSubSig\";\nimport scatter from \"../../scripts/Scatter\";\nimport Aws from \"../../scripts/Aws\";\nimport ecc from 'eosjs-ecc'; // redux\n\nimport { connect } from \"react-redux\";\nimport { setAuthority } from \"../../redux/actions\";\n\nvar Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Password, _Component);\n\n  function Password(props) {\n    var _this;\n\n    _classCallCheck(this, Password);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Password).call(this, props));\n    _this.state = {\n      collapse: false,\n      symbol: _this.props.symbol,\n      nftId: _this.props.id,\n      passWord: \"\",\n      hash: \"\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refreshKey = _this.refreshKey.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resetReduxAuthority = _this.resetReduxAuthority.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Password, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    } // パスワードを変更する\n\n  }, {\n    key: \"refreshKey\",\n    value: function () {\n      var _refreshKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var symbol, subsig, nftId, _ref, account, subkey, newPassWord, indexhash, _ref2, privateKey, publicKey, authority, oldAuthority, oneday, message, new_signature, apiObj, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                symbol = this.state.symbol;\n                subsig = new SubSig(symbol); // トークンIDを用いてEOSからトークンの所有者及び、subsig公開鍵を取得する\n\n                nftId = this.state.nftId;\n                _context.next = 5;\n                return subsig.getEOSAuth(nftId);\n\n              case 5:\n                _ref = _context.sent;\n                account = _ref.account;\n                subkey = _ref.subkey;\n                alert(\"そのトークンのサブキーは\" + subkey);\n                newPassWord = this.state.passWord;\n                indexhash = this.state.hash;\n                _context.next = 13;\n                return subsig.genKeyPair(nftId, newPassWord);\n\n              case 13:\n                _ref2 = _context.sent;\n                privateKey = _ref2.privateKey;\n                publicKey = _ref2.publicKey;\n                alert(\"そのパスワードのサブキーは\" + publicKey); // パスワードから生成したsubkeyが一致した場合、つまり正しいパスワードの場合はパスワードを復元する\n\n                if (!(publicKey === subkey)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                authority = {\n                  id: nftId,\n                  privateKey: privateKey\n                };\n                localStorage.setItem(symbol, JSON.stringify(authority));\n                this.setState({\n                  collapse: false,\n                  symbol: \"\",\n                  nftId: \"\",\n                  passWord: \"\"\n                });\n                this.resetReduxAuthority();\n                window.alert(\"認証に成功しました。\");\n                _context.next = 26;\n                break;\n\n              case 25:\n                return _context.abrupt(\"return\", window.alert(\"認証に失敗しました。\"));\n\n              case 26:\n                _context.prev = 26;\n                oldAuthority = subsig.getLocalAuth();\n                oneday = 24 * 60 * 60 * 1000;\n                message = String(Math.floor(Number(new Date()) / oneday) * oneday); // デジタル署名\n                //const old_signature = ecc.sign(message, oldAuthority.privateKey);\n\n                new_signature = ecc.sign(message, privateKey);\n                alert(message);\n                apiObj = {\n                  \"name\": \"PROXY\",\n                  \"contract\": process.env.REACT_APP_CONTRACT_ACCOUNT,\n                  \"symbol\": symbol,\n                  \"sig\": new_signature,\n                  \"tokenId\": nftId,\n                  \"hash\": indexhash\n                };\n                _context.next = 35;\n                return Aws.getRedirectPermission(apiObj);\n\n              case 35:\n                response = _context.sent;\n                _context.next = 42;\n                break;\n\n              case 38:\n                _context.prev = 38;\n                _context.t0 = _context[\"catch\"](26);\n                console.error(_context.t0);\n                return _context.abrupt(\"return\", window.alert(\"認証に失敗しました。\"));\n\n              case 42:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[26, 38]]);\n      }));\n\n      return function refreshKey() {\n        return _refreshKey.apply(this, arguments);\n      };\n    }() // 前の認証情報を消すためreduxの認証情報を初期化する\n\n  }, {\n    key: \"resetReduxAuthority\",\n    value: function resetReduxAuthority() {\n      var authority = {\n        symbol: null,\n        nftId: null,\n        accountName: null,\n        isManager: false\n      };\n      this.props.dispatch(setAuthority(authority));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Col, {\n        xs: \"12\",\n        className: \"p-3 mb-3 normal-shadow border-special\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\u7D39\\u4ECB\\u30EA\\u30F3\\u30AF\\u3078\\u30B8\\u30E3\\u30F3\\u30D7\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.toggle,\n        style: {\n          marginBottom: '1rem'\n        },\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"\\u884C\\u304D\\u5148\\u3068\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u307E\\u3059\"), React.createElement(Collapse, {\n        isOpen: this.state.collapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\u30B3\\u30DF\\u30E5\\u30CB\\u30C6\\u30A3\\u540D\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"symbol\",\n        onChange: this.handleChange,\n        value: this.state.symbol,\n        placeholder: \"\\uFF13\\u6587\\u5B57\\u304F\\u3089\\u3044\\u82F1\\u5B57\\u5927\\u6587\\u5B57\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nftId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"\\u30C8\\u30FC\\u30AF\\u30F3ID\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"nftId\",\n        onChange: this.handleChange,\n        value: this.state.nftId,\n        placeholder: \"\\u30C8\\u30FC\\u30AF\\u30F3ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"passWord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"passWord\",\n        onChange: this.handleChange,\n        value: this.state.passWord,\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"hash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u305F\\u3044ID\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"hash\",\n        onChange: this.handleChange,\n        value: this.state.hash,\n        placeholder: \"\\u7D39\\u4ECB\\u3055\\u308C\\u305FID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.refreshKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u30A2\\u30AF\\u30BB\\u30B9\"))));\n    }\n  }]);\n\n  return Password;\n}(Component);\n\nexport default connect()(Password);","map":{"version":3,"sources":["/var/www/html/pcs-proxy/src/Component/Setting/Password.jsx"],"names":["React","Component","Collapse","Col","Button","Form","FormGroup","Label","Input","SubSig","scatter","Aws","ecc","connect","setAuthority","Password","props","state","collapse","symbol","nftId","id","passWord","hash","toggle","bind","handleChange","refreshKey","resetReduxAuthority","setState","e","target","name","value","subsig","getEOSAuth","account","subkey","alert","newPassWord","indexhash","genKeyPair","privateKey","publicKey","authority","localStorage","setItem","JSON","stringify","window","oldAuthority","getLocalAuth","oneday","message","String","Math","floor","Number","Date","new_signature","sign","apiObj","process","env","REACT_APP_CONTRACT_ACCOUNT","getRedirectPermission","response","console","error","accountName","isManager","dispatch","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport SubSig from \"../../scripts/EosSubSig\";\nimport scatter from \"../../scripts/Scatter\";\nimport Aws from \"../../scripts/Aws\";\nimport ecc from 'eosjs-ecc';\n// redux\nimport { connect } from \"react-redux\";\nimport { setAuthority } from \"../../redux/actions\";\n\nclass Password extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            collapse: false,\n            symbol: this.props.symbol,\n            nftId: this.props.id,\n            passWord: \"\",\n            hash:\"\"\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.refreshKey = this.refreshKey.bind(this);\n        this.resetReduxAuthority = this.resetReduxAuthority.bind(this);\n    }\n\n    toggle() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // パスワードを変更する\n    async refreshKey() {\n        const symbol = this.state.symbol;\n        const subsig = new SubSig(symbol);\n\n        // トークンIDを用いてEOSからトークンの所有者及び、subsig公開鍵を取得する\n        const nftId = this.state.nftId;\n        const { account, subkey } = await subsig.getEOSAuth(nftId);\n        alert(\"そのトークンのサブキーは\"+subkey);\n        const newPassWord = this.state.passWord;\n        const indexhash = this.state.hash;\n        const { privateKey, publicKey } = await subsig.genKeyPair(nftId, newPassWord);\n        alert(\"そのパスワードのサブキーは\"+publicKey);\n\n        // パスワードから生成したsubkeyが一致した場合、つまり正しいパスワードの場合はパスワードを復元する\n        if (publicKey === subkey) {\n            const authority = {\n                id: nftId,\n                privateKey: privateKey\n            };\n            localStorage.setItem(symbol, JSON.stringify(authority));\n\n            this.setState({\n                collapse: false,\n                symbol: \"\",\n                nftId: \"\",\n                passWord: \"\"\n            });\n\n            this.resetReduxAuthority();\n            window.alert(\"認証に成功しました。\");\n\n        }else{ return window.alert(\"認証に失敗しました。\");}\n\n\n        // 旧：アカウント名が代理人のアカウント名と等しい時\n        try {\n                const oldAuthority = subsig.getLocalAuth();\n                const oneday = 24 * 60 * 60 * 1000;\n                const message = String(Math.floor(Number(new Date()) / oneday) * oneday);\n\n                // デジタル署名\n                //const old_signature = ecc.sign(message, oldAuthority.privateKey);\n                const new_signature = ecc.sign(message, privateKey);\n                alert(message);\n                const apiObj = {\n                    \"name\": \"PROXY\",\n                    \"contract\":process.env.REACT_APP_CONTRACT_ACCOUNT,\n                    \"symbol\": symbol,\n                    \"sig\": new_signature,\n                    \"tokenId\": nftId,\n                    \"hash\":indexhash\n                };\n\n                const response = await Aws.getRedirectPermission(apiObj);\n\n            } catch (error) {\n                console.error(error);\n                return window.alert(\"認証に失敗しました。\");\n        }\n    }\n\n    // 前の認証情報を消すためreduxの認証情報を初期化する\n    resetReduxAuthority() {\n        const authority = {\n            symbol: null,\n            nftId: null,\n            accountName: null,\n            isManager: false\n        }\n        this.props.dispatch(setAuthority(authority));\n    }\n\n\n    render() {\n        return (\n            <Col xs=\"12\" className=\"p-3 mb-3 normal-shadow border-special\">\n                <h5>紹介リンクへジャンプ</h5>\n                <br/>\n\n                <Button onClick={this.toggle} style={{ marginBottom: '1rem' }} className=\"my-2\">行き先とパスワードを入力します</Button>\n\n                <Collapse isOpen={this.state.collapse}>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"symbol\">コミュニティ名</Label>\n                            <Input type=\"text\" name=\"symbol\" onChange={this.handleChange} value={this.state.symbol} placeholder=\"３文字くらい英字大文字\" />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"nftId\">トークンID</Label>\n                            <Input type=\"number\" name=\"nftId\" onChange={this.handleChange} value={this.state.nftId} placeholder=\"トークンID\" />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"passWord\">パスワード</Label>\n                            <Input type=\"password\" name=\"passWord\" onChange={this.handleChange} value={this.state.passWord} placeholder=\"パスワード\" />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"hash\">アクセスしたいID</Label>\n                            <Input type=\"text\" name=\"hash\" onChange={this.handleChange} value={this.state.hash} placeholder=\"紹介されたID\" />\n                        </FormGroup>\n\n                        <Button onClick={this.refreshKey}>アクセス</Button>\n                    </Form>\n                </Collapse>\n            </Col>\n        );\n    }\n}\n\nexport default connect()(Password);\n"]},"metadata":{},"sourceType":"module"}